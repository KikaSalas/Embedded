


ARM Macro Assembler    Page 1 


    1 00000000         #line   1                "mbed-os\\rtos\\TARGET_CORTEX\\
TARGET_CORTEX_M\\TOOLCHAIN_ARM\\except.S"
    1 00000000         ;
    2 00000000         
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000         
    7 00000000         
    8 00000000         
    9 00000000         
   10 00000000         
   11 00000000         
   12 00000000         
   13 00000000         
   14 00000000         
   15 00000000         
   16 00000000         
   17 00000000         
   18 00000000         
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000         
   25 00000000         
   26 00000000         
   27 00000000         
   28 00000000         
   29 00000000         
   30 00000000 00000010 
                       FAULT_TYPE_HARD_FAULT
                               EQU              0x10
   31 00000000 00000020 
                       FAULT_TYPE_MEMMANAGE_FAULT
                               EQU              0x20
   32 00000000 00000030 
                       FAULT_TYPE_BUS_FAULT
                               EQU              0x30
   33 00000000 00000040 
                       FAULT_TYPE_USAGE_FAULT
                               EQU              0x40
   34 00000000         
   35 00000000                 PRESERVE8
   36 00000000                 THUMB
   37 00000000         
   38 00000000                 AREA             |.text|, CODE, READONLY
   39 00000000         
   40 00000000         HardFault_Handler
                               PROC
   41 00000000         
   42 00000000                 EXPORT           HardFault_Handler
   43 00000000 4B2C            LDR              R3,=FAULT_TYPE_HARD_FAULT
   44 00000002 E7FE            B                Fault_Handler
   45 00000004                 ENDP
   46 00000004         
   47 00000004         MemManage_Handler
                               PROC



ARM Macro Assembler    Page 2 


   48 00000004         
   49 00000004                 EXPORT           MemManage_Handler
   50 00000004 4B2C            LDR              R3,=FAULT_TYPE_MEMMANAGE_FAULT
   51 00000006 E7FE            B                Fault_Handler
   52 00000008                 ENDP
   53 00000008         
   54 00000008         BusFault_Handler
                               PROC
   55 00000008         
   56 00000008                 EXPORT           BusFault_Handler
   57 00000008 4B2C            LDR              R3,=FAULT_TYPE_BUS_FAULT
   58 0000000A E7FE            B                Fault_Handler
   59 0000000C                 ENDP
   60 0000000C         
   61 0000000C         UsageFault_Handler
                               PROC
   62 0000000C         
   63 0000000C                 EXPORT           UsageFault_Handler
   64 0000000C 4B2C            LDR              R3,=FAULT_TYPE_USAGE_FAULT
   65 0000000E E7FE            B                Fault_Handler
   66 00000010                 ENDP
   67 00000010         
   68 00000010         Fault_Handler
                               PROC
   69 00000010                 EXPORT           Fault_Handler
   70 00000010         
   71 00000010                 IMPORT           osRtxInfo
   72 00000010                 IMPORT           mbed_fault_handler
   73 00000010                 IMPORT           mbed_fault_context
   74 00000010         
   75 00000010 F3EF 8008       MRS              R0,MSP
   76 00000014 492B            LDR              R1,=0x4
   77 00000016 4672            MOV              R2,LR
   78 00000018 420A            TST              R2,R1       ; Check EXC_RETURN 
                                                            for bit 2
   79 0000001A D001            BEQ              Fault_Handler_Continue
   80 0000001C F3EF 8009       MRS              R0,PSP
   81 00000020         
   82 00000020         Fault_Handler_Continue
   83 00000020 469C            MOV              R12,R3
   84 00000022 4929            LDR              R1,=mbed_fault_context
   85 00000024 6802            LDR              R2,[R0]     ; Capture R0
   86 00000026 600A            STR              R2,[R1]
   87 00000028 3104            ADDS             R1,#4
   88 0000002A 6842            LDR              R2,[R0,#4]  ; Capture R1
   89 0000002C 600A            STR              R2,[R1]
   90 0000002E 3104            ADDS             R1,#4
   91 00000030 6882            LDR              R2,[R0,#8]  ; Capture R2
   92 00000032 600A            STR              R2,[R1]
   93 00000034 3104            ADDS             R1,#4
   94 00000036 68C2            LDR              R2,[R0,#12] ; Capture R3
   95 00000038 600A            STR              R2,[R1]
   96 0000003A 3104            ADDS             R1,#4
   97 0000003C C1F0            STMIA            R1!,{R4-R7} ; Capture R4..R7
   98 0000003E 4647            MOV              R7,R8       ; Capture R8
   99 00000040 600F            STR              R7,[R1]
  100 00000042 3104            ADDS             R1,#4
  101 00000044 464F            MOV              R7,R9       ; Capture R9
  102 00000046 600F            STR              R7,[R1]



ARM Macro Assembler    Page 3 


  103 00000048 3104            ADDS             R1,#4
  104 0000004A 4657            MOV              R7,R10      ; Capture R10
  105 0000004C 600F            STR              R7,[R1]
  106 0000004E 3104            ADDS             R1,#4
  107 00000050 465F            MOV              R7,R11      ; Capture R11
  108 00000052 600F            STR              R7,[R1]
  109 00000054 3104            ADDS             R1,#4
  110 00000056 6902            LDR              R2,[R0,#16] ; Capture R12
  111 00000058 600A            STR              R2,[R1]
  112 0000005A 3108            ADDS             R1,#8       ; Add 8 here to cap
                                                            ture LR next, we wi
                                                            ll capture SP later
                                                            
  113 0000005C 6942            LDR              R2,[R0,#20] ; Capture LR
  114 0000005E 600A            STR              R2,[R1]
  115 00000060 3104            ADDS             R1,#4
  116 00000062 6982            LDR              R2,[R0,#24] ; Capture PC
  117 00000064 600A            STR              R2,[R1]
  118 00000066 3104            ADDS             R1,#4
  119 00000068 69C2            LDR              R2,[R0,#28] ; Capture xPSR
  120 0000006A 600A            STR              R2,[R1]
  121 0000006C 3104            ADDS             R1,#4
  122 0000006E         ; Adjust stack pointer to its original value and capture
                        it
  123 0000006E 4603            MOV              R3,R0
  124 00000070 3320            ADDS             R3,#0x20    ; Add 0x20 to get t
                                                            he SP value prior t
                                                            o exception
  125 00000072 4E16            LDR              R6,=0x200
  126 00000074 4232            TST              R2,R6       ; Check for if STK 
                                                            was aligned by chec
                                                            king bit-9 in xPSR 
                                                            value
  127 00000076 D000            BEQ              Fault_Handler_Continue1
  128 00000078 3304            ADDS             R3,#0x4
  129 0000007A         
  130 0000007A         Fault_Handler_Continue1
  131 0000007A 4675            MOV              R5,LR
  132 0000007C 4E0D            LDR              R6,=0x10    ; Check for bit-4 t
                                                            o see if FP context
                                                             was saved
  133 0000007E 4235            TST              R5,R6
  134 00000080 D100            BNE              Fault_Handler_Continue2
  135 00000082 3348            ADDS             R3,#0x48    ; 16 FP regs + FPCS
                                                            R + 1 Reserved
  136 00000084         
  137 00000084         Fault_Handler_Continue2
  138 00000084 460C            MOV              R4,R1
  139 00000086 3C10            SUBS             R4,#0x10    ; Set the location 
                                                            of SP in ctx
  140 00000088 6023            STR              R3,[R4]     ; Capture the adjus
                                                            ted SP
  141 0000008A F3EF 8209       MRS              R2,PSP      ; Get PSP          
                                                             
  142 0000008E 600A            STR              R2,[R1]
  143 00000090 3104            ADDS             R1,#4
  144 00000092 F3EF 8208       MRS              R2,MSP      ; Get MSP          
                                                             
  145 00000096 600A            STR              R2,[R1]



ARM Macro Assembler    Page 4 


  146 00000098 3104            ADDS             R1,#4
  147 0000009A 4672            MOV              R2,LR       ; Get current LR(EX
                                                            C_RETURN)          
                                                             
  148 0000009C 600A            STR              R2,[R1]
  149 0000009E 3104            ADDS             R1,#4
  150 000000A0 F3EF 8214       MRS              R2,CONTROL  ; Get CONTROL Reg
  151 000000A4 600A            STR              R2,[R1]
  152 000000A6 4B0A            LDR              R3,=mbed_fault_handler ; Load a
                                                            ddress of mbedFault
                                                            Handler
  153 000000A8 4660            MOV              R0,R12
  154 000000AA 4907            LDR              R1,=mbed_fault_context
  155 000000AC 4A09            LDR              R2,=osRtxInfo
  156 000000AE 4798            BLX              R3
  157 000000B0         
  158 000000B0 E7FE            B                .           ; Just in case we c
                                                            ome back here      
                                                                      
  159 000000B2                 ENDP
  160 000000B2         
  161 000000B2         
  162 000000B2         
  163 000000B2                 END
              00 00 00000010 
              00000020 
              00000030 
              00000040 
              00000004 
              00000000 
              00000200 
              00000000 
              00000000 
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M0+ -
-apcs=interwork --depend=.\build\except.d -o.\build\except.o -I.\RTE\_testsubmo
dule -IC:\Users\Kika\AppData\Local\Arm\Packs\Keil\STM32L0xx_DFP\2.0.1\Drivers\C
MSIS\Device\ST\STM32L0xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Users\Kika
\AppData\Local\Arm\Packs\Keil\STM32L0xx_DFP\2.0.1 --predefine="__UVISION_VERSIO
N SETA 528" --predefine="STM32L072xx SETA 1" --cpreproc_opts=-D__ASSERT_MSG,-DT
RANSACTION_QUEUE_SIZE_SPI=2,-D__CORTEX_M0PLUS,-D__MBED_CMSIS_RTOS_CM,-DLPTICKER
_DELAY_TICKS=3,-D__CMSIS_RTOS,-DARM_MATH_CM0PLUS --list=.\build\except.lst mbed
-os\rtos\TARGET_CORTEX\TARGET_CORTEX_M\TOOLCHAIN_ARM\except.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 38 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      None
Comment: .text unused
BusFault_Handler 00000008

Symbol: BusFault_Handler
   Definitions
      At line 54 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 56 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
Comment: BusFault_Handler used once
Fault_Handler 00000010

Symbol: Fault_Handler
   Definitions
      At line 68 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 44 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
      At line 51 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
      At line 58 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
      At line 65 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
      At line 69 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S

Fault_Handler_Continue 00000020

Symbol: Fault_Handler_Continue
   Definitions
      At line 82 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 79 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
Comment: Fault_Handler_Continue used once
Fault_Handler_Continue1 0000007A

Symbol: Fault_Handler_Continue1
   Definitions
      At line 130 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCH
AIN_ARM\\except.S
   Uses
      At line 127 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCH
AIN_ARM\\except.S
Comment: Fault_Handler_Continue1 used once
Fault_Handler_Continue2 00000084




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: Fault_Handler_Continue2
   Definitions
      At line 137 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCH
AIN_ARM\\except.S
   Uses
      At line 134 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCH
AIN_ARM\\except.S
Comment: Fault_Handler_Continue2 used once
HardFault_Handler 00000000

Symbol: HardFault_Handler
   Definitions
      At line 40 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 42 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
Comment: HardFault_Handler used once
MemManage_Handler 00000004

Symbol: MemManage_Handler
   Definitions
      At line 47 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 49 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
Comment: MemManage_Handler used once
UsageFault_Handler 0000000C

Symbol: UsageFault_Handler
   Definitions
      At line 61 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 63 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
Comment: UsageFault_Handler used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FAULT_TYPE_BUS_FAULT 00000030

Symbol: FAULT_TYPE_BUS_FAULT
   Definitions
      At line 32 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 57 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
Comment: FAULT_TYPE_BUS_FAULT used once
FAULT_TYPE_HARD_FAULT 00000010

Symbol: FAULT_TYPE_HARD_FAULT
   Definitions
      At line 30 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 43 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
Comment: FAULT_TYPE_HARD_FAULT used once
FAULT_TYPE_MEMMANAGE_FAULT 00000020

Symbol: FAULT_TYPE_MEMMANAGE_FAULT
   Definitions
      At line 31 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 50 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
Comment: FAULT_TYPE_MEMMANAGE_FAULT used once
FAULT_TYPE_USAGE_FAULT 00000040

Symbol: FAULT_TYPE_USAGE_FAULT
   Definitions
      At line 33 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 64 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
Comment: FAULT_TYPE_USAGE_FAULT used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

mbed_fault_context 00000000

Symbol: mbed_fault_context
   Definitions
      At line 73 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 84 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
      At line 154 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCH
AIN_ARM\\except.S

mbed_fault_handler 00000000

Symbol: mbed_fault_handler
   Definitions
      At line 72 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 152 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCH
AIN_ARM\\except.S
Comment: mbed_fault_handler used once
osRtxInfo 00000000

Symbol: osRtxInfo
   Definitions
      At line 71 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCHA
IN_ARM\\except.S
   Uses
      At line 155 in file mbed-os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\\TOOLCH
AIN_ARM\\except.S
Comment: osRtxInfo used once
3 symbols
350 symbols in table
